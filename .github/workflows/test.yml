name: Linting, (type-)checking, testing

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - "pyproject.toml"
      - ".github/workflows/test.yml"
      - "TODO_package_name/**"
      - "tests/**"

env:
  UV_CACHE_DIR: ${{ github.workspace }}/.cache/uv

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-matrix: ${{ steps.get-python-versions-action.outputs.latest-python-versions }}

    steps:
      - uses: snok/latest-python-versions@v1
        id: get-python-versions-action
        with:
          min-version: "3.11"
          include-prereleases: false

  pre-commit:
    needs: get-python-versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-pre-commit-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-pre-commit-
            uv-${{ runner.os }}-

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Check with pre-commit
        run: uv run pre-commit run --all-files

      - name: Minimize uv cache
        run: uv cache prune --ci

  pytest:
    needs: get-python-versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
            uv-${{ runner.os }}-

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Test with PyTest
        run: uv run pytest --cov=TODO_package_name/ tests/ || [ $? -eq 5 ]

      - name: Minimize uv cache
        run: uv cache prune --ci
